#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define SCROLL 1

/* どこかの共通ヘッダの近くに */

#define BASE        0
#define ROT_90      1
#define ROT_180     2
#define ROT_270     3
#define Scroll_L0   4
#define Scroll_L90  5
#define Scroll_L180 6
#define Scroll_L270 7
#define SELECT_BT   8     /* BT設定レイヤー */

// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角


&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    quick-tap-ms = <300>;
    flavor = "balanced";
};

/ {
    behaviors {
        // TapDance追加 https://zmk.dev/docs/keymaps/behaviors/tap-dance

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt 8 LEFT>, <&kp LA(ESC)>, <&num>;
        };

        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp KP_N4>, <&kp BACKSPACE>, <&num>;
        };
    };

    /* --- コンボ定義 --- */

    combos {
        compatible = "zmk,combos";

        /* 1+2+3 同時押しで 設定レイヤーを開閉（トグル） */

        combo_bt_select {
            timeout-ms = <50>;              /* 反応が鈍ければ少し上げる(例: 60〜80) */
            key-positions = <5 0>;        /* ← ここは “1/2/3 キーの物理位置” */
            bindings = <&tog 8>;   /* 入る/出るをトグル */
            /* 必要なら layers = <BASE L1 L2>; を付けて適用範囲を絞る */
            // layers = <6>;
        };

        //r0 {
        //bindings = <&to 0>;

        PU {
            bindings = <&kp LC(PG_UP)>;
            key-positions = <5 4>;
            layers = <0>;
        };

        //r90 {
        //    bindings = <&to 1>;

        PD {
            bindings = <&kp LC(PG_DN)>;
            key-positions = <4 3>;
            layers = <0>;
        };

        //r180 {
        //    bindings = <&to 2>;

        HM {
            bindings = <&kp LC(HOME)>;
            key-positions = <1 2>;
            layers = <0>;
        };

        //r270 {
        //    bindings = <&to 3>;

        ED {
            bindings = <&kp LC(END)>;
            key-positions = <1 0>;
            layers = <0>;
        };

        n7 {
            bindings = <&kp KP_N7>;
            key-positions = <5 2>;
            layers = <9>;
        };

        n8 {
            bindings = <&kp KP_N8>;
            key-positions = <1 4>;
            layers = <9>;
        };

        n9 {
            bindings = <&kp KP_N9>;
            key-positions = <0 3>;
            layers = <9>;
        };

        /* テンキーレイヤー（トグル） */

        L9 {
            bindings = <&num>;
            key-positions = <0 1 2>;
        };

        n0 {
            bindings = <&kp N0>;
            key-positions = <5 4>;
            layers = <9>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <4 3>;
            layers = <9>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <1 2>;
            layers = <9>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <0 1>;
            layers = <9>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <3 2>;
            layers = <9>;
        };
    };

    /* 入力プロセッサ（回転設定） */

    trackball_listener: trackball_listener {
        compatible = "zmk,input-listener";
        status = "okay";

        /* 基本(0°) = XY入替 完成済み*/

        input-processors = <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP)>;

        rot90 {
            layers = <ROT_90>;

            /* 90° = XY入替 + X反転 完成済み */

            input-processors = <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT)>;
        };

        rot180 {
            layers = <ROT_180>;

            /* 180° =XY入替 + Y反転 完成済み */

            input-processors = <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>;
        };

        rot270 {
            layers = <ROT_270>;

            /* 270° = Y反転 完成済み */

            input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>;
        };
    };

    macros {
        num: num {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 9 &kp KP_NUMLOCK>;
            label = "NUM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* 6キー想定（2×3）: 行ごとに3つずつ並べて6個 */

        base {
            label = "BASE";
            bindings = <
&mkp RCLK  &lt 4 DOWN  &mkp LCLK  &kp RIGHT  &kp UP  &td0
            >;
        };

        /* 回転 */

        rot90 {
            label = "ROT_90";
            bindings = <
&mkp LCLK  &kp LEFT  &kp UP  &mkp RCLK  &lt 5 RIGHT  &kp DOWN
            >;
        };

        rot180 {
            label = "ROT_180";
            bindings = <
&mkp LCLK  &kp UP  &mkp RCLK  &kp LEFT  &lt 6 DOWN  &kp RIGHT
            >;
        };

        rot270 {
            label = "ROT_270";
            bindings = <
&mkp RCLK  &kp DOWN  &kp RIGHT  &mkp LCLK  &lt 7 UP  &kp LEFT
            >;
        };

        /* スクロール用 */

        Scroll_L0 {
            label = "Scroll_L0 ";
            bindings = <
&trans  &trans  &trans  &trans  &kp LCTRL  &trans
            >;
        };

        Scroll_L90 {
            label = "Scroll_L90";
            bindings = <
&kp LC(HOME)  &kp LCTRL  &kp LC(PG_UP)  &kp LC(END)  &trans  &kp LC(PG_DN)
            >;
        };

        Scroll_L180 {
            label = "Scroll_L180";
            bindings = <
&kp LC(PG_UP)  &kp LCTRL  &kp LC(PG_DN)  &kp LC(HOME)  &trans  &kp LC(END)
            >;
        };

        Scroll_L270 {
            label = "Scroll_L270";
            bindings = <
&kp LC(PG_DN)  &kp LCTRL  &kp LC(END)  &kp LC(PG_UP)  &trans  &kp LC(HOME)
            >;
        };

        /* 設定(選択)レイヤー：回転を選んで 6 で確定（閉じる） */

        selbt {
            label = "SELECT_BT";
            bindings = <
&bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bootloader  &bt BT_CLR  &bt BT_CLR_ALL
            >;
        };

        num {
            bindings = <
&lt 10 KP_N3  &kp KP_N2  &kp KP_N1  &kp KP_N6  &kp KP_N5  &td4
            >;

            label = "NUM";
        };

        layer_10 {
            bindings = <
&trans  &kp SLASH  &kp JP_ASTERISK  &kp JP_EQUAL  &kp MINUS  &kp JP_PLUS
            >;
        };

        layer_11 {
            bindings = <
&kp PERIOD  &kp COMMA  &trans  &kp ENTER  &kp EQUAL  &trans
            >;
        };
    };
};
